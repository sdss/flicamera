on:
  push:
    tags:
      - '*'

name: Create Release

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8]
        include:
        - os: ubuntu-latest
          TARGET: x86_64-unknown-linux-musl
          COMPILER: gcc
          LINKER: gcc

    steps:

      - uses: actions/checkout@v2

      - name: Echo matrix
        run: echo ${{matrix.TARGET}} ${{ matrix.python-version }}

      # - name: Wait for build to succeed
      #   uses: fountainhead/action-wait-for-check@v1.0.0
      #   id: wait-for-build
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     checkName: Build
      #     ref: ${{ github.sha }}

      # - name: Wait for test to succeed
      #   uses: fountainhead/action-wait-for-check@v1.0.0
      #   id: wait-for-test
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     checkName: Test
      #     ref: ${{ github.sha }}

      # - name: Cancel failed build
      #   if: steps.wait-for-build.outputs.conclusion == 'failure' || steps.wait-for-test.outputs.conclusion == 'failure'
      #   uses: andymckay/cancel-action@0.2

      - name: Install libusb
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y libusb-1.0-0 libusb-1.0.0-dev

      - name: Cache Setup
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
              ${{ runner.os }}-pip-

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pep517
          pip install .

      - name: Build source package
        if: matrix.python-version == '3.8' && matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          python -m pep517.build --source --out-dir dist/ .

      - name: Build wheel
        run: |
          python -m pep517.build --binary --out-dir dist/ .

      - name: Create Release
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags') && matrix.target == 'x86_64-unknown-linux-musl' && matrix.python-version == '3.8'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: flicamera ${{ github.ref }}
          body:
          draft: false
          prerelease: false

      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
            user: __token__
            password: ${{ secrets.pypi_password }}

      # - name: Publish package to TestPyPI
      #   uses: pypa/gh-action-pypi-publish@master
      #   with:
      #     user: __token__
      #     password: ${{ secrets.test_pypi_password }}
      #     repository_url: https://test.pypi.org/legacy/
