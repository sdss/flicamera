name: Build

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths-ignore:
      - 'docs/**'
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, ubuntu-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13', '3.14']
        include:
          - os: macos-latest
            TARGET: x86_64-apple-darwin
            COMPILER: clang
            LINKER: clang

          - os: ubuntu-latest
            TARGET: armv7-unknown-linux-musleabihf
            COMPILER: arm-linux-gnueabihf-gcc-5
            LINKER: gcc-5-arm-linux-gnueabihf

          - os: ubuntu-latest
            TARGET: x86_64-unknown-linux-musl
            COMPILER: gcc
            LINKER: gcc

    steps:
      - uses: actions/checkout@v5

      - name: Echo matrix
        run: echo ${{matrix.TARGET}} ${{ matrix.python-version }}

      - name: Install libusb (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y libusb-1.0-0 libusb-1.0-0-dev python3 python3-pip git gzip

      - name: Install libusb (macOS)
        if: matrix.os == 'macos-latest'
        run: brew install libusb

      - name: Install uv
        uses: astral-sh/setup-uv@v7
        with:
          enable-cache: true

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install package
        run: |
          uv sync --no-dev --frozen

      - name: Test flicamera
        run: |
          uv run flicamera status
